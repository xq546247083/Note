-- 作坊生产补偿邮件
INSERT INTO p_email
SELECT  UUID(),playerid,'00000000-0000-0000-0000-000000000000',22,'作坊生产返还','{"Des":"主公，由于作坊队列进行了调整，所有主公的作坊队列重置为了两条队列，在此会将主公维护期间正在生产的材料通过邮件全部发放到各位主公手里，由此造成的不便，还希望主公多多谅解。","SenderName":"系统邮件"}',Reward,FALSE,FALSE,NOW(),NOW(),DATE_ADD(NOW(), INTERVAL 30 DAY),NOW(),FALSE 
FROM `p_workshop_queue` WHERE reward!='' AND IsCollect=FALSE;

--  作坊购买队列消耗 --
DROP TABLE IF EXISTS WorkShopBuyQueueTemp; 
CREATE TABLE `WorkShopBuyQueueTemp` (
  `Num` INT(10) UNSIGNED NOT NULL COMMENT '#购买次数',
  `Use` VARCHAR(256) NOT NULL COMMENT '消耗',
  PRIMARY KEY (`Num`)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COMMENT='作坊购买队列配置';
INSERT  INTO `WorkShopBuyQueueTemp`(`Num`,`Use`) VALUES (1,'1111,0,2000'),(2,'1111,0,12000');

-- 返还购买队列的元宝消耗
INSERT INTO p_email
SELECT  UUID(),a.playerid,'00000000-0000-0000-0000-000000000000',22,'作坊队列重置元宝返还','{"Des":"主公，由于作坊队列功能调整，在此会将您开启队列花费的元宝全部进行返还，主公可根据需求重新开启，调整后开启额外的一条队列只需要花费1000元宝，由此造成的不便，还希望主公多多谅解。","SenderName":"系统邮件"}',b.Use,FALSE,FALSE,NOW(),NOW(),DATE_ADD(NOW(), INTERVAL 30 DAY),NOW(),FALSE 
FROM `p_workshop` a 
LEFT JOIN WorkShopBuyQueueTemp b ON a.AddNum=b.Num
WHERE a.AddNum>0;


-- 更新作坊的队列为0
-- 清空队列数据
UPDATE `p_workshop` SET AddNum=0;
TRUNCATE `p_workshop_queue`;
DROP TABLE IF EXISTS WorkShopBuyQueueTemp; 

-- 处理将魂道具 ----------------------------------------------------------------------------------------------------------------------------

--  创建将魂转换临时表 --
DROP TABLE IF EXISTS HeroSoulTemp; 
CREATE TABLE `HeroSoulTemp` (
  `ModelID` INT(10) UNSIGNED NOT NULL COMMENT '#以前的ModelID',
  `NewModelID`INT(10) UNSIGNED NOT NULL COMMENT '现在的ModelID',
  PRIMARY KEY (`ModelID`)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COMMENT='将魂转换临时表';
INSERT  INTO `HeroSoulTemp`(`ModelID`,`NewModelID`) VALUES (14090001,14080001),(14090002,14080002),(14090003,14080003),(14090004,14080004),(14090005,14080005),(14090006,14080006),(14090007,14080007),(14090008,14080008),(14090009,14080009),(14090010,14080010),(14090011,14080011),(14090012,14080012),(14090013,14080013),(14090014,14080017),(14090015,14080018),(14090016,14080019),(14090017,14080020),(14090018,14080021),(14090019,14080022),(14090020,14080023),(14090021,14080024),(14090022,14080025),(14090023,14080026),(14090024,14080027),(14090025,14080028),(14090026,14080029),(14090027,14080033),(14090028,14080034),(14090029,14080035),(14090030,14080036),(14090031,14080037),(14090032,14080038),(14090033,14080039),(14090034,14080040),(14090035,14080041),(14090036,14080042),(14090037,14080043),(14090038,14080044),(14090039,14080045),(14090040,14080049),(14090041,14080050),(14090042,14080051),(14090043,14080052),(14090044,14080053),(14090045,14080054),(14090046,14080055),(14090047,14080056),(14090048,14080057),(14090049,14080058),(14090050,14080059),(14090051,14080060),(14090052,14080061);

-- 把以前的将魂处理为现在的将魂
UPDATE `p_goods_props` a
INNER JOIN `HeroSoulTemp` b ON a.`ModelID` = b.`ModelID`
SET a.`ModelID` = b.`NewModelID`,a.`Num` = a.`Num`*30;

DROP TABLE IF EXISTS HeroSoulTemp; 

-- 处理武将进阶 ----------------------------------------------------------------------------------------------------------------------------
--  创建武将进阶消耗表 --
DROP TABLE IF EXISTS HeroNumStepUseTemp; 
CREATE TABLE `HeroNumStepUseTemp` (
  `NumberID` INT(10) UNSIGNED NOT NULL COMMENT '#NumberID',
  `StepNum`INT(10) UNSIGNED NOT NULL COMMENT '阶数',
  `Use` VARCHAR(256) NOT NULL COMMENT '消耗',
  PRIMARY KEY (`NumberID`,`StepNum`)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COMMENT='武将进阶消耗表';
INSERT  INTO `HeroNumStepUseTemp`(`NumberID`,`StepNum`,`Use`) VALUES (1001,1,'1408,14080001,30'),(1001,2,'1408,14080001,90'),(1001,3,'1408,14080001,180'),(1001,4,'1408,14080001,300'),(1001,5,'1408,14080001,450'),(1002,1,'1408,14080002,30'),(1002,2,'1408,14080002,90'),(1002,3,'1408,14080002,180'),(1002,4,'1408,14080002,300'),(1002,5,'1408,14080002,450'),(1003,1,'1408,14080003,30'),(1003,2,'1408,14080003,90'),(1003,3,'1408,14080003,180'),(1003,4,'1408,14080003,300'),(1003,5,'1408,14080003,450'),(1004,1,'1408,14080004,30'),(1004,2,'1408,14080004,90'),(1004,3,'1408,14080004,180'),(1004,4,'1408,14080004,300'),(1004,5,'1408,14080004,450'),(1005,1,'1408,14080005,30'),(1005,2,'1408,14080005,90'),(1005,3,'1408,14080005,180'),(1005,4,'1408,14080005,300'),(1005,5,'1408,14080005,450'),(1006,1,'1408,14080006,30'),(1006,2,'1408,14080006,90'),(1006,3,'1408,14080006,180'),(1006,4,'1408,14080006,300'),(1006,5,'1408,14080006,450'),(1007,1,'1408,14080007,30'),(1007,2,'1408,14080007,90'),(1007,3,'1408,14080007,180'),(1007,4,'1408,14080007,300'),(1007,5,'1408,14080007,450'),(1008,1,'1408,14080008,30'),(1008,2,'1408,14080008,90'),(1008,3,'1408,14080008,180'),(1008,4,'1408,14080008,300'),(1008,5,'1408,14080008,450'),(1009,1,'1408,14080009,30'),(1009,2,'1408,14080009,90'),(1009,3,'1408,14080009,180'),(1009,4,'1408,14080009,300'),(1009,5,'1408,14080009,450'),(1010,1,'1408,14080010,90'),(1010,2,'1408,14080010,270'),(1010,3,'1408,14080010,540'),(1010,4,'1408,14080010,900'),(1010,5,'1408,14080010,1350'),(1011,1,'1408,14080011,90'),(1011,2,'1408,14080011,270'),(1011,3,'1408,14080011,540'),(1011,4,'1408,14080011,900'),(1011,5,'1408,14080011,1350'),(1012,1,'1408,14080012,90'),(1012,2,'1408,14080012,270'),(1012,3,'1408,14080012,540'),(1012,4,'1408,14080012,900'),(1012,5,'1408,14080012,1350'),(1013,1,'1408,14080013,90'),(1013,2,'1408,14080013,270'),(1013,3,'1408,14080013,540'),(1013,4,'1408,14080013,900'),(1013,5,'1408,14080013,1350'),(2001,1,'1408,14080017,30'),(2001,2,'1408,14080017,90'),(2001,3,'1408,14080017,180'),(2001,4,'1408,14080017,300'),(2001,5,'1408,14080017,450'),(2002,1,'1408,14080018,30'),(2002,2,'1408,14080018,90'),(2002,3,'1408,14080018,180'),(2002,4,'1408,14080018,300'),(2002,5,'1408,14080018,450'),(2003,1,'1408,14080019,30'),(2003,2,'1408,14080019,90'),(2003,3,'1408,14080019,180'),(2003,4,'1408,14080019,300'),(2003,5,'1408,14080019,450'),(2004,1,'1408,14080020,30'),(2004,2,'1408,14080020,90'),(2004,3,'1408,14080020,180'),(2004,4,'1408,14080020,300'),(2004,5,'1408,14080020,450'),(2005,1,'1408,14080021,30'),(2005,2,'1408,14080021,90'),(2005,3,'1408,14080021,180'),(2005,4,'1408,14080021,300'),(2005,5,'1408,14080021,450'),(2006,1,'1408,14080022,30'),(2006,2,'1408,14080022,90'),(2006,3,'1408,14080022,180'),(2006,4,'1408,14080022,300'),(2006,5,'1408,14080022,450'),(2007,1,'1408,14080023,30'),(2007,2,'1408,14080023,90'),(2007,3,'1408,14080023,180'),(2007,4,'1408,14080023,300'),(2007,5,'1408,14080023,450'),(2008,1,'1408,14080024,30'),(2008,2,'1408,14080024,90'),(2008,3,'1408,14080024,180'),(2008,4,'1408,14080024,300'),(2008,5,'1408,14080024,450'),(2009,1,'1408,14080025,30'),(2009,2,'1408,14080025,90'),(2009,3,'1408,14080025,180'),(2009,4,'1408,14080025,300'),(2009,5,'1408,14080025,450'),(2010,1,'1408,14080026,90'),(2010,2,'1408,14080026,270'),(2010,3,'1408,14080026,540'),(2010,4,'1408,14080026,900'),(2010,5,'1408,14080026,1350'),(2011,1,'1408,14080027,90'),(2011,2,'1408,14080027,270'),(2011,3,'1408,14080027,540'),(2011,4,'1408,14080027,900'),(2011,5,'1408,14080027,1350'),(2012,1,'1408,14080028,90'),(2012,2,'1408,14080028,270'),(2012,3,'1408,14080028,540'),(2012,4,'1408,14080028,900'),(2012,5,'1408,14080028,1350'),(2013,1,'1408,14080029,90'),(2013,2,'1408,14080029,270'),(2013,3,'1408,14080029,540'),(2013,4,'1408,14080029,900'),(2013,5,'1408,14080029,1350'),(3001,1,'1408,14080033,30'),(3001,2,'1408,14080033,90'),(3001,3,'1408,14080033,180'),(3001,4,'1408,14080033,300'),(3001,5,'1408,14080033,450'),(3002,1,'1408,14080034,30'),(3002,2,'1408,14080034,90'),(3002,3,'1408,14080034,180'),(3002,4,'1408,14080034,300'),(3002,5,'1408,14080034,450'),(3003,1,'1408,14080035,30'),(3003,2,'1408,14080035,90'),(3003,3,'1408,14080035,180'),(3003,4,'1408,14080035,300'),(3003,5,'1408,14080035,450'),(3004,1,'1408,14080036,30'),(3004,2,'1408,14080036,90'),(3004,3,'1408,14080036,180'),(3004,4,'1408,14080036,300'),(3004,5,'1408,14080036,450'),(3005,1,'1408,14080037,30'),(3005,2,'1408,14080037,90'),(3005,3,'1408,14080037,180'),(3005,4,'1408,14080037,300'),(3005,5,'1408,14080037,450'),(3006,1,'1408,14080038,30'),(3006,2,'1408,14080038,90'),(3006,3,'1408,14080038,180'),(3006,4,'1408,14080038,300'),(3006,5,'1408,14080038,450'),(3007,1,'1408,14080039,30'),(3007,2,'1408,14080039,90'),(3007,3,'1408,14080039,180'),(3007,4,'1408,14080039,300'),(3007,5,'1408,14080039,450'),(3008,1,'1408,14080040,30'),(3008,2,'1408,14080040,90'),(3008,3,'1408,14080040,180'),(3008,4,'1408,14080040,300'),(3008,5,'1408,14080040,450'),(3009,1,'1408,14080041,30'),(3009,2,'1408,14080041,90'),(3009,3,'1408,14080041,180'),(3009,4,'1408,14080041,300'),(3009,5,'1408,14080041,450'),(3010,1,'1408,14080042,90'),(3010,2,'1408,14080042,270'),(3010,3,'1408,14080042,540'),(3010,4,'1408,14080042,900'),(3010,5,'1408,14080042,1350'),(3011,1,'1408,14080043,90'),(3011,2,'1408,14080043,270'),(3011,3,'1408,14080043,540'),(3011,4,'1408,14080043,900'),(3011,5,'1408,14080043,1350'),(3012,1,'1408,14080044,90'),(3012,2,'1408,14080044,270'),(3012,3,'1408,14080044,540'),(3012,4,'1408,14080044,900'),(3012,5,'1408,14080044,1350'),(3013,1,'1408,14080045,90'),(3013,2,'1408,14080045,270'),(3013,3,'1408,14080045,540'),(3013,4,'1408,14080045,900'),(3013,5,'1408,14080045,1350'),(4001,1,'1408,14080049,30'),(4001,2,'1408,14080049,90'),(4001,3,'1408,14080049,180'),(4001,4,'1408,14080049,300'),(4001,5,'1408,14080049,450'),(4002,1,'1408,14080050,30'),(4002,2,'1408,14080050,90'),(4002,3,'1408,14080050,180'),(4002,4,'1408,14080050,300'),(4002,5,'1408,14080050,450'),(4003,1,'1408,14080051,30'),(4003,2,'1408,14080051,90'),(4003,3,'1408,14080051,180'),(4003,4,'1408,14080051,300'),(4003,5,'1408,14080051,450'),(4004,1,'1408,14080052,30'),(4004,2,'1408,14080052,90'),(4004,3,'1408,14080052,180'),(4004,4,'1408,14080052,300'),(4004,5,'1408,14080052,450'),(4005,1,'1408,14080053,30'),(4005,2,'1408,14080053,90'),(4005,3,'1408,14080053,180'),(4005,4,'1408,14080053,300'),(4005,5,'1408,14080053,450'),(4006,1,'1408,14080054,30'),(4006,2,'1408,14080054,90'),(4006,3,'1408,14080054,180'),(4006,4,'1408,14080054,300'),(4006,5,'1408,14080054,450'),(4007,1,'1408,14080055,30'),(4007,2,'1408,14080055,90'),(4007,3,'1408,14080055,180'),(4007,4,'1408,14080055,300'),(4007,5,'1408,14080055,450'),(4008,1,'1408,14080056,30'),(4008,2,'1408,14080056,90'),(4008,3,'1408,14080056,180'),(4008,4,'1408,14080056,300'),(4008,5,'1408,14080056,450'),(4009,1,'1408,14080057,30'),(4009,2,'1408,14080057,90'),(4009,3,'1408,14080057,180'),(4009,4,'1408,14080057,300'),(4009,5,'1408,14080057,450'),(4010,1,'1408,14080058,90'),(4010,2,'1408,14080058,270'),(4010,3,'1408,14080058,540'),(4010,4,'1408,14080058,900'),(4010,5,'1408,14080058,1350'),(4011,1,'1408,14080059,90'),(4011,2,'1408,14080059,270'),(4011,3,'1408,14080059,540'),(4011,4,'1408,14080059,900'),(4011,5,'1408,14080059,1350'),(4012,1,'1408,14080060,90'),(4012,2,'1408,14080060,270'),(4012,3,'1408,14080060,540'),(4012,4,'1408,14080060,900'),(4012,5,'1408,14080060,1350'),(4013,1,'1408,14080061,90'),(4013,2,'1408,14080061,270'),(4013,3,'1408,14080061,540'),(4013,4,'1408,14080061,900'),(4013,5,'1408,14080061,1350');

--  创建武将对应numberid的表 --
DROP TABLE IF EXISTS HeroModelTemp; 
CREATE TABLE `HeroModelTemp` (
  `ModelID`INT(10) UNSIGNED NOT NULL COMMENT 'ModelID',
  `NumberID` INT(10) UNSIGNED NOT NULL COMMENT '#NumberID',
  PRIMARY KEY (`ModelID`)
) ENGINE=INNODB DEFAULT CHARSET=utf8 COMMENT='创建武将对应numberid的表';
INSERT  INTO `HeroModelTemp`(`ModelID`,`NumberID`) VALUES (12011701,1001),(12011702,1002),(12011603,1003),(12011604,1004),(12011605,1005),(12011506,1006),(12011507,1007),(12011508,1008),(12011509,1009),(12011410,1010),(12011411,1011),(12011412,1012),(12011413,1013),(12011314,1014),(12011215,1015),(12011116,1016),(12012701,2001),(12012702,2002),(12012603,2003),(12012604,2004),(12012605,2005),(12012506,2006),(12012507,2007),(12012508,2008),(12012509,2009),(12012410,2010),(12012411,2011),(12012412,2012),(12012413,2013),(12012314,2014),(12012215,2015),(12012116,2016),(12013701,3001),(12013702,3002),(12013603,3003),(12013604,3004),(12013605,3005),(12013506,3006),(12013507,3007),(12013508,3008),(12013509,3009),(12013410,3010),(12013411,3011),(12013412,3012),(12013413,3013),(12013314,3014),(12013215,3015),(12013116,3016),(12014701,4001),(12014702,4002),(12014603,4003),(12014604,4004),(12014605,4005),(12014506,4006),(12014507,4007),(12014508,4008),(12014509,4009),(12014410,4010),(12014411,4011),(12014412,4012),(12014413,4013),(12011510,1010),(12011511,1011),(12011512,1012),(12011513,1013),(12012510,2010),(12012511,2011),(12012512,2012),(12012513,2013),(12013510,3010),(12013511,3011),(12013512,3012),(12013513,3013),(12014510,4010),(12014511,4011),(12014512,4012),(12014513,4013),(12015601,5001),(12015602,5002),(12015603,5003),(12015604,5004),(12015605,5005),(12015606,5006),(12011801,1001),(12011802,1002),(12011803,1003),(12011804,1004),(12011805,1005),(12011806,1006),(12011807,1007),(12011808,1008),(12011809,1009),(12012801,2001),(12012802,2002),(12012803,2003),(12012804,2004),(12012805,2005),(12012806,2006),(12012807,2007),(12012808,2008),(12012809,2009),(12013801,3001),(12013802,3002),(12013803,3003),(12013804,3004),(12013805,3005),(12013806,3006),(12013807,3007),(12013808,3008),(12013809,3009),(12014801,4001),(12014802,4002),(12014803,4003),(12014804,4004),(12014805,4005),(12014806,4006),(12014807,4007),(12014808,4008),(12014809,4009),(12011810,1010),(12011811,1011),(12011812,1012),(12011813,1013),(12012810,2010),(12012811,2011),(12012812,2012),(12012813,2013),(12013810,3010),(12013811,3011),(12013812,3012),(12013813,3013),(12014810,4010),(12014811,4011),(12014812,4012),(12014813,4013),(12015607,5007);

-- 重置进阶消耗的返回
INSERT INTO p_email
SELECT  UUID(),e.playerid,'00000000-0000-0000-0000-000000000000',22,'升星重置将魂返还','{"Des":"主公，由于武将升星功能调整，在此会全部返还您已升星过的武将将魂，主公可根据需求重新为武将进行升星，最新的升星效果可以在武将升星界面进行查看提升预览，由此造成的不便，还希望主公多多谅解。","SenderName":"系统邮件"}'
,GROUP_CONCAT(e.use SEPARATOR '||'),FALSE,FALSE,NOW(),NOW(),DATE_ADD(NOW(), INTERVAL 30 DAY),NOW(),FALSE FROM (
SELECT  c.playerid,d.use FROM  `p_hero` c
INNER JOIN (
  SELECT a.`ModelID`,b.`StepNum`,b.`Use` FROM HeroModelTemp a 
  LEFT JOIN HeroNumStepUseTemp b ON a.`NumberID`=b.`NumberID`
  WHERE b.`NumberID` IS NOT NULL
)d ON c.`ModelID`=d. ModelID AND c.`StepNum`=d.`StepNum`
WHERE c.`StepNum`>0
)e GROUP BY playerid;


-- 重置进阶次数
UPDATE `p_hero` SET StepNum = 0;

DROP TABLE IF EXISTS HeroModelTemp; 
DROP TABLE IF EXISTS HeroNumStepUseTemp; 




